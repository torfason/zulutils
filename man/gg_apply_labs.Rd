% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zulugg.R
\name{gg_apply_labs}
\alias{gg_apply_labs}
\title{Apply a string function to each label present in the plot object}
\usage{
gg_apply_labs(p, fun)
}
\arguments{
\item{p}{A \code{ggplot2} object}

\item{fun}{A function to be applied to the labels in \code{p}}
}
\value{
A \code{ggplot2} object with changed labels
}
\description{
Applies the string function \code{fun} to each label present in
the plot object \code{p}. The function, \code{fun}, should accept
and return character vectors. It can either be a simple prettyfying
function or it can perform more complex lookup to replace
variable names with variable labels
}
\examples{
# This uses snakecase::to_sentence_case to prettify the labels
# Note: The plot is assigned to a named variable before piping to gg_apply_labs()
#       This is to avoid issues due to the precedence of operators,
#       (\%>\% has higher precedence than +)
library(tidyverse)
library(snakecase)
p <- starwars \%>\%
    filter(mass < 1000) \%>\%
    mutate(species = species \%>\% fct_infreq \%>\%  fct_lump(5) \%>\% fct_explicit_na) \%>\%
    ggplot(aes(height, mass, color=species, size=birth_year)) +
    geom_point()
p \%>\% gg_apply_labs(snakecase::to_sentence_case)

}
\seealso{
Other zulugg: 
\code{\link{gg_apply}()},
\code{\link{gg_integer_breaks}()}
}
\concept{zulugg}
