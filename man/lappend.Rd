% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lappend.R
\name{lappend}
\alias{lappend}
\title{Append individual values to a list}
\usage{
lappend(l, ..., .after = length(l))
}
\arguments{
\item{l}{The list to append to.}

\item{...}{One or more values to be appended to the list, each as a separate
list element.}

\item{.after}{At what position to append.}
}
\value{
A list with the specified values appended at the correct position.
}
\description{
If passed two lists, the standard \code{\link[=append]{append()}} function will \emph{concatenate} the
lists, rather than treating the second list as a value that should be
appended to the list. In contrast, the \code{\link[=lappend]{lappend()}} function will always
append individual values to a list (it does this by making sure that each
element is encapsulated in its own list before using \code{\link[base:append]{base::append()}} to put
it in the original list).

Importantly, this approach correctly allows adding a \code{data.frame} to a list,
whereas calling \code{base::append()} directly will add each column as a separate
element.
}
\examples{
l <- list()
l <- append(l, cars)
l <- append(l, mtcars)
length(l) # l is a list of 13 vectors

l <- list()
l <- lappend(l, cars)
l <- lappend(l, mtcars)
length(l) # l is a list of 2 data.frames

}
