% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yencode.R
\name{yencode}
\alias{yencode}
\alias{yencoder}
\alias{ydecode}
\alias{ydecoder}
\title{Yet (another urlencode compatible) encoding scheme}
\usage{
yencode(string, escape = "\%", whitelist = c("._~-", "][!$&'()*+,;=:/?@#"))

yencoder(escape = "\%", whitelist = c("._~-", "][!$&'()*+,;=:/?@#"))

ydecode(string, escape = "\%")

ydecoder(escape = "\%")
}
\arguments{
\item{string}{The string to process.}

\item{escape}{The escape character to use.}

\item{whitelist}{Any characters that should not be escaped. See details.}
}
\value{
The processed (encoded or decoded) string.
}
\description{
Encode and decode using an encoding scheme that is a superset of the
\code{\link[utils:URLencode]{utils::URLencode()}} encoding. With default settings, \code{yencode()} and
\code{ydecode()} produce strings that are fully compatible with \code{urlencode}
encoded strings. However, these functions allow a custom whitelist of symbols
that should not be escaped by the encoding process, and a configurable escape
character to use in place of the \verb{\%} symbol, for example to work with storage
layers that do not like the \verb{\%} symbol.

The \code{yencoder()} and \code{ydecoder()} functions are convenience function, which
return the corresponding a function with the escape and whitelist already
set, allowing easy use in contexts that expect a single-argument function.
}
\details{
In addition to the supplied white-list, \code{A-Z}, \code{a-z}, and \code{0-9} are always
white-listed. There are no restrictions on the white-list, except that the
escape character must not be part of it (and will be removed from it with a
warning). Of course, it is important that the underlying storage layer
handles all white-listed characters gracefully.

Note that any \code{ascii} letter or number will work perfectly fine as an escape
character, the output will be well-formed and decoded correctly, even if some
of them, such as \code{1} will result in escape sequences that contain the letter
itself.

In particular, \code{yencoder("Z", whitelist="")} returns a encoder that will
encode any string to a pure \code{A-Z}, \code{a-z}, and \code{0-9} representation, suitable
for extremely limited storage layers (it will encode \code{Z} as \code{Z5A}).
}
