% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cb.R
\name{cb_as_col_spec_factors}
\alias{cb_as_col_spec_factors}
\title{Construct code to use as \code{col_spec} for factors}
\usage{
cb_as_col_spec_factors(d)
}
\arguments{
\item{d}{The \code{data.frame} to use when generating the \code{col_spec}.}
}
\value{
A \code{catty} string with column definitions, which is suitable for
defining a \code{col_spec}, after any needed editing to reorder factors.
}
\description{
This function examines all character columns in a data.frame (typically one
that was read from comma separated text file using a reader function such as
\code{readdr::read_csv()}), and generates a specification suitable for reading
those columns from the underlying file as factors.

The key benefit is that it will find all variables that are using the same
factor levels and group them together, so editing the \code{col_spec} to reorder
factor levels or make other changes is straightforward.

The result is retured as a \code{catty} vector to provide a more readable output
by default.

The output can then be edited before the \code{col_spec} is used to read the data
in fresh from the CSV file. Assuming the \code{cols()} result is assigned to a
variable \code{cspec}, one might have the followinlg:

\if{html}{\out{<div class="sourceCode">}}\preformatted{d <- read_csv(csv_file)
cb_as_col_spec_factors(d)
# edit the output to fit your needs
cspec <- cols(...)
d <- read_csv(csv_file, col_types=cspec)
}\if{html}{\out{</div>}}
}
