% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enframed_and_labelled.R
\name{rename_enframed}
\alias{rename_enframed}
\title{Rename \code{tibble} columns according to values in another \code{tibble}.}
\usage{
rename_enframed(d, d.enframed)
}
\arguments{
\item{d}{The \code{tibble} whose columns we want to rename.}

\item{d.enframed}{The \verb{enframed tibble} with the old and new names.}
}
\value{
A tibble that is identical to \code{d} but with renamed columns.
}
\description{
This function renames variables from \code{d} according to the columns in
\code{d.enframed}, which should be in \code{enframed} format (two columns named \code{name}
and \code{value}, see \code{\link[tibble:enframe]{tibble::enframe()}} for details). It will rename \emph{from}
according to \code{d.enframed$name}, and \emph{to} according to \code{d.enframed$value}

\verb{NOTE:} This function may merit deprecation, because \code{\link[dplyr:rename]{dplyr::rename_with()}}, coupled
with \code{\link[=lookup]{lookup()}}, deals quite well with this use-case (and is more general).

\if{html}{\out{<div class="sourceCode">}}\preformatted{d.enframed = tibble::enframe(c(a="New A", b="New B"))
}\if{html}{\out{</div>}}
}
