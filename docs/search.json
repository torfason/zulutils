[{"path":"https://torfason.github.io/zulutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Magnus Thor Torfason. Maintainer.","code":""},{"path":"https://torfason.github.io/zulutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Torfason MT (2022). zulutils: Miscellaneous utility functions author found useful. https://torfason.github.io/zulutils, https://github.com/torfason/zulutils.","code":"@Manual{,   title = {zulutils: Miscellaneous utility functions that the author found useful},   author = {Magnus Thor Torfason},   year = {2022},   note = {https://torfason.github.io/zulutils, https://github.com/torfason/zulutils}, }"},{"path":[]},{"path":"https://torfason.github.io/zulutils/index.html","id":"miscellaneous-utility-functions-that-the-author-found-useful","dir":"","previous_headings":"","what":"Miscellaneous utility functions that the author found useful","title":"Miscellaneous utility functions that the author found useful","text":"package contains various miscellaneous utility functions author found useful time. free use , YMMV (Mileage May Vary). Versions 0.3.5 higher developed R 4.1 rely new pipe operator (|>), older versions R work.","code":""},{"path":"https://torfason.github.io/zulutils/reference/bgrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Boolean grep function — bgrep","title":"Boolean grep function — bgrep","text":"function looks pattern elements string, returning TRUE element contains pattern, FALSE elements. argument order follows conventions stringr package, underlying matching done using stringr::str_extract().","code":""},{"path":"https://torfason.github.io/zulutils/reference/bgrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boolean grep function — bgrep","text":"","code":"bgrep(string, pattern)"},{"path":"https://torfason.github.io/zulutils/reference/bgrep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boolean grep function — bgrep","text":"string (possibly vectorized) string process. pattern (possibly vectorized) regexp pattern use.","code":""},{"path":"https://torfason.github.io/zulutils/reference/bgrep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boolean grep function — bgrep","text":"vector boolean values indicating elements string matched corresponding elements pattern.","code":""},{"path":"https://torfason.github.io/zulutils/reference/catty.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a catty vector — catty","title":"Construct a catty vector — catty","text":"catty() constructs catty vector (class zmisc_catty).  catty vector character vector uses cat() print output, rather standard print() command. Apart , behaves like standard character vector. Objects class convenient return values functions generally just print desired value without index information normal print command. happens function returning catty object called interactively. However, return value can also assigned variable later use, making flexible function output text directly.","code":""},{"path":"https://torfason.github.io/zulutils/reference/catty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a catty vector — catty","text":"","code":"catty(x, sep = \" \")"},{"path":"https://torfason.github.io/zulutils/reference/catty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a catty vector — catty","text":"x character vector want behave catty manner. sep separator output elements catty vector.","code":""},{"path":"https://torfason.github.io/zulutils/reference/catty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a catty vector — catty","text":"catty vector.","code":""},{"path":"https://torfason.github.io/zulutils/reference/catty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a catty vector — catty","text":"","code":"x <- catty(letters) x #> a b c d e f g h i j k l m n o p q r s t u v w x y z y <- catty(month.name, sep=\"\\n\") y #> January #> February #> March #> April #> May #> June #> July #> August #> September #> October #> November #> December"},{"path":"https://torfason.github.io/zulutils/reference/check_ties.html","id":null,"dir":"Reference","previous_headings":"","what":"Check voting ties for errors — check_ties","title":"Check voting ties for errors — check_ties","text":"Compares voting scores last seat first seat , use seat calculation functions. check assumes calling function correctly assignes tied seats first listed party, depending value ties parameter, can either error (clean dirty ties ties==\"error\"), warn (dirty ties ties==\"first\").","code":""},{"path":"https://torfason.github.io/zulutils/reference/check_ties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check voting ties for errors — check_ties","text":"","code":"check_ties(score_last_in, score_first_out, ties)"},{"path":"https://torfason.github.io/zulutils/reference/check_ties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check voting ties for errors — check_ties","text":"score_last_in score last seat allocated score_first_out score first seat allocated ties ties cause \"error\" \"first\" chosen","code":""},{"path":"https://torfason.github.io/zulutils/reference/dhondt.html","id":null,"dir":"Reference","previous_headings":"","what":"Allocate discrete seats given continuous votes — dhondt","title":"Allocate discrete seats given continuous votes — dhondt","text":"dhondt() function can used allocate discrete number seats (resources) parties according continuous number votes (claims resource), way approximates proportionality. Semi-proportionality achieved D'Hondt method, commonly used approach electoral allocation. implementations D'Hondt allocation R can found electoral::seats_ha() coalitions::dHondt(). motivation behind implementation simple interface reasonable defaults, suitable use pipes operating data data.frames tibbles. error handling also explicit implementations. Finally, party names optional, useful natural names parties. largest_remainder() allocates votes way parallel dhondt() function, using least remainder method, instead greatest divisors method. alternative implementation exists electoral::seats_lr(), possibly coalitions::hare_niemeyer(). rationale implementation function comparable dhondt().","code":""},{"path":"https://torfason.github.io/zulutils/reference/dhondt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allocate discrete seats given continuous votes — dhondt","text":"","code":"dhondt(votes, seats = 7, ties = c(\"error\", \"first\"))  largest_remainder(votes, seats = 7, ties = c(\"error\", \"first\"))"},{"path":"https://torfason.github.io/zulutils/reference/dhondt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allocate discrete seats given continuous votes — dhondt","text":"votes vector votes different parties. number parties determined based length vector. Votes can given whole real numbers, requirement sum 1 100. seats integer giving number seats allocate. Defaults 7, common size boards deliberative bodies (pretty nice number general), one almost always want specify . ties character variable specifying case ties. D'Hondt method specify tie handling, two options allowed. Specifying \"error\" (default) results error tie marginal allocated seat. Specifying \"first\" means party comes first (votes vector) wins. Methods allocating randomly favoring largest party can achieved ordering votes vector prior calling function.","code":""},{"path":"https://torfason.github.io/zulutils/reference/dhondt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allocate discrete seats given continuous votes — dhondt","text":"integer vector allocations seats parties, order parties specified votes vector. length result vector always equals length votes vector. sum result vector always equals value seats. votesvector names, results vector names.","code":""},{"path":"https://torfason.github.io/zulutils/reference/dhondt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Allocate discrete seats given continuous votes — dhondt","text":"","code":"dhondt(c(13,11,7,5,3)) #> [1] 3 2 1 1 0 dhondt(c(liberals=4876, conservatives=5212, greens=2349), seats=21) #>      liberals conservatives        greens  #>             8             9             4   largest_remainder(c(13,11,7,5,3)) #> [1] 2 2 1 1 1 largest_remainder(c(liberals=4876, conservatives=5212, greens=2349), seats=21) #>      liberals conservatives        greens  #>             8             9             4"},{"path":"https://torfason.github.io/zulutils/reference/exposition_pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Exposition pipe operator — %$%","title":"Exposition pipe operator — %$%","text":"See magrittr::%$% details.","code":""},{"path":"https://torfason.github.io/zulutils/reference/exposition_pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exposition pipe operator — %$%","text":"","code":"lhs %$% rhs"},{"path":"https://torfason.github.io/zulutils/reference/factor_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct code to use as col_spec for factors — factor_spec","title":"Construct code to use as col_spec for factors — factor_spec","text":"function examines character columns data.frame (typically one read csv file using readdr::read_csv(), generates specification suitable reading columns underlying file factors. key benefit find variables using factor levels group together, editing col_spec reorder factor levels make changes straightforward. string contains quotation marks, can useful pipe output directly cat(), copy output source file using . output can edited colspec used read data fresh CSV file. Assuming cols() result assigned variable cspec, one might following.","code":"d <- read_csv(csv_file) factor_spec(d) |> cat() # edit the output to fit ones needs cspec <- cols(...) d <- read_csv(csv_file, col_types=cspec)"},{"path":"https://torfason.github.io/zulutils/reference/factor_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct code to use as col_spec for factors — factor_spec","text":"","code":"factor_spec(d)"},{"path":"https://torfason.github.io/zulutils/reference/factor_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct code to use as col_spec for factors — factor_spec","text":"d data frame use generating col_spec","code":""},{"path":"https://torfason.github.io/zulutils/reference/factor_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct code to use as col_spec for factors — factor_spec","text":"string definitions suitable defining col_spec, needed editing reorder factors.","code":""},{"path":"https://torfason.github.io/zulutils/reference/get_drake_target_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the size of a drake target — get_drake_target_size","title":"Return the size of a drake target — get_drake_target_size","text":"function returns size given drake target.","code":""},{"path":"https://torfason.github.io/zulutils/reference/get_drake_target_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the size of a drake target — get_drake_target_size","text":"","code":"get_drake_target_size(target)"},{"path":"https://torfason.github.io/zulutils/reference/get_drake_target_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the size of a drake target — get_drake_target_size","text":"target Name target","code":""},{"path":"https://torfason.github.io/zulutils/reference/get_drake_target_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the size of a drake target — get_drake_target_size","text":"Size target","code":""},{"path":"https://torfason.github.io/zulutils/reference/get_drake_target_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the size of all targets in a drake plan — get_drake_target_sizes","title":"Return the size of all targets in a drake plan — get_drake_target_sizes","text":"function returns size targets given drake plan","code":""},{"path":"https://torfason.github.io/zulutils/reference/get_drake_target_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the size of all targets in a drake plan — get_drake_target_sizes","text":"","code":"get_drake_target_sizes(my_plan)"},{"path":"https://torfason.github.io/zulutils/reference/get_drake_target_sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the size of all targets in a drake plan — get_drake_target_sizes","text":"my_plan Name plan get target names","code":""},{"path":"https://torfason.github.io/zulutils/reference/get_drake_target_sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the size of all targets in a drake plan — get_drake_target_sizes","text":"Tibble containing names sizes targets","code":""},{"path":"https://torfason.github.io/zulutils/reference/get_labels_enframed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the variable labels of a labelled tibble in an enframed tibble — get_labels_enframed","title":"Get the variable labels of a labelled tibble in an enframed tibble — get_labels_enframed","text":"Given data tibble/data.frame, function return tibble enframed format (two columns named name value, see tibble::enframe() details), name column contains names variables original tibble value column contains labels. can used review labels, (coupled set_labels_enframed() function, currently implemented) used preserve labels across label-destructive operations, export labels file (sheet excel file). Finally, used conjunction zmisc::lookup() dplyr::rename_with() pipe rename variables order replace names variables labels display plot table function support display labels simple way.","code":""},{"path":"https://torfason.github.io/zulutils/reference/get_labels_enframed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the variable labels of a labelled tibble in an enframed tibble — get_labels_enframed","text":"","code":"get_labels_enframed(d)"},{"path":"https://torfason.github.io/zulutils/reference/get_labels_enframed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the variable labels of a labelled tibble in an enframed tibble — get_labels_enframed","text":"d tibble whose columns variable labels.","code":""},{"path":"https://torfason.github.io/zulutils/reference/get_labels_enframed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the variable labels of a labelled tibble in an enframed tibble — get_labels_enframed","text":"tibble enframed format containing variable names labels.","code":""},{"path":"https://torfason.github.io/zulutils/reference/gg_apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to each label and character/factor variable in the plot object. — gg_apply","title":"Apply a function to each label and character/factor variable in the plot object. — gg_apply","text":"Applies string function fun label present plot object p, well character factor variables underlying data. function, fun, accept return character vectors. can either simple prettifying function can perform complex lookup replace variable names variable labels. variables factors, converted character applying function reconverted factor. Care taken preserve factor ordering.","code":""},{"path":"https://torfason.github.io/zulutils/reference/gg_apply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to each label and character/factor variable in the plot object. — gg_apply","text":"","code":"gg_apply(p, fun, ..., .labs = TRUE, .vars = TRUE)"},{"path":"https://torfason.github.io/zulutils/reference/gg_apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to each label and character/factor variable in the plot object. — gg_apply","text":"p ggplot2 object fun function applied labels p ... variables passed fun .labs logical character, indicating whether apply function labels p. TRUE, apply character factor variables p. FALSE, NULL empty vector, apply function variables. character vector containing names variables, apply function particular variables. error may thrown vector refers non-existing labels. Defaults TRUE. .vars logical character. TRUE, apply character factor variables p. FALSE, NULL empty vector, apply function variables. character vector containing names variables, apply function particular variables. error may thrown vector refers non-existing variables variables neither characters factors. Defaults TRUE.","code":""},{"path":"https://torfason.github.io/zulutils/reference/gg_apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to each label and character/factor variable in the plot object. — gg_apply","text":"ggplot2 object changed labels","code":""},{"path":[]},{"path":"https://torfason.github.io/zulutils/reference/gg_apply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to each label and character/factor variable in the plot object. — gg_apply","text":"","code":"# This uses snakecase::to_sentence_case to prettify the labels # Note: The plot is assigned to a named variable before piping to gg_apply_labs() #       This is to avoid issues due to the precedence of operators, #       (%>% has higher precedence than +) library(tidyverse) #> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── #> ✔ ggplot2 3.3.5     ✔ purrr   0.3.4 #> ✔ tibble  3.1.6     ✔ dplyr   1.0.8 #> ✔ tidyr   1.2.0     ✔ stringr 1.4.0 #> ✔ readr   2.1.2     ✔ forcats 0.5.1 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() library(snakecase) p <- starwars %>%     filter(mass < 1000) %>%     mutate(species = species %>% fct_infreq %>%  fct_lump(5) %>% fct_explicit_na) %>%     ggplot(aes(height, mass, color=species, size=birth_year)) +     geom_point() p %>% gg_apply(snakecase::to_sentence_case) #> Warning: Removed 23 rows containing missing values (geom_point)."},{"path":"https://torfason.github.io/zulutils/reference/gg_apply_labs.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a string function to each label present in the plot object — gg_apply_labs","title":"Apply a string function to each label present in the plot object — gg_apply_labs","text":"Applies string function fun label present plot object p. function, fun`, accept return character vectors. can either simple prettifying function can perform complex lookup replace variable names variable labels","code":""},{"path":"https://torfason.github.io/zulutils/reference/gg_apply_labs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a string function to each label present in the plot object — gg_apply_labs","text":"","code":"gg_apply_labs(p, fun)"},{"path":"https://torfason.github.io/zulutils/reference/gg_apply_labs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a string function to each label present in the plot object — gg_apply_labs","text":"p ggplot2 object fun function applied labels p","code":""},{"path":"https://torfason.github.io/zulutils/reference/gg_apply_labs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a string function to each label present in the plot object — gg_apply_labs","text":"ggplot2 object changed labels","code":""},{"path":[]},{"path":"https://torfason.github.io/zulutils/reference/gg_apply_labs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a string function to each label present in the plot object — gg_apply_labs","text":"","code":"# This uses snakecase::to_sentence_case to prettify the labels # Note: The plot is assigned to a named variable before piping to gg_apply_labs() #       This is to avoid issues due to the precedence of operators, #       (%>% has higher precedence than +) library(tidyverse) library(snakecase) p <- starwars %>%     filter(mass < 1000) %>%     mutate(species = species %>% fct_infreq %>%  fct_lump(5) %>% fct_explicit_na) %>%     ggplot(aes(height, mass, color=species, size=birth_year)) +     geom_point() p %>% gg_apply_labs(snakecase::to_sentence_case) #> Warning: 'gg_apply_labs' is deprecated. #> Use 'gg_apply' instead. #> See help(\"Deprecated\") #> Warning: Removed 23 rows containing missing values (geom_point)."},{"path":"https://torfason.github.io/zulutils/reference/gg_integer_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply integer breaks to a graph. — gg_integer_breaks","title":"Apply integer breaks to a graph. — gg_integer_breaks","text":"Calculates vector breaks contains integers 0 max(x) (little bit extra headroom case maximum element integer)","code":""},{"path":"https://torfason.github.io/zulutils/reference/gg_integer_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply integer breaks to a graph. — gg_integer_breaks","text":"","code":"gg_integer_breaks(x)"},{"path":"https://torfason.github.io/zulutils/reference/gg_integer_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply integer breaks to a graph. — gg_integer_breaks","text":"x input vector breaks calculated. Note fancy NSE , actual variable must passed function, also function currently handle negative data error passed data.","code":""},{"path":"https://torfason.github.io/zulutils/reference/gg_integer_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply integer breaks to a graph. — gg_integer_breaks","text":"vector breaks suitable use ggplot breaks parameter.","code":""},{"path":[]},{"path":"https://torfason.github.io/zulutils/reference/gg_integer_breaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply integer breaks to a graph. — gg_integer_breaks","text":"","code":"if ( require(ggplot2) ) {   ggplot(mtcars) +     aes(wt,drat) +     geom_point() +     scale_y_continuous(breaks=gg_integer_breaks(mtcars$drat)) }"},{"path":"https://torfason.github.io/zulutils/reference/mutate_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate only rows of data.frame/tibble that satisfy condition — mutate_cond","title":"Mutate only rows of data.frame/tibble that satisfy condition — mutate_cond","text":"mutate_cond() function allows simple conditional mutations data.frames combining conditional select rows, followed dplyr::mutate() syntax specify change columns. function inspired , based , function proposed discussion Stack Overflow. function, however, extends original mutate_cond() function proposed thread falling back using base::transform() dplyr package installed.","code":""},{"path":"https://torfason.github.io/zulutils/reference/mutate_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate only rows of data.frame/tibble that satisfy condition — mutate_cond","text":"","code":"mutate_cond(   .data,   .condition,   ...,   .envir = parent.frame(),   .method = c(\"default\", \"dplyr\", \"base\") )"},{"path":"https://torfason.github.io/zulutils/reference/mutate_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate only rows of data.frame/tibble that satisfy condition — mutate_cond","text":".data data.frame mutate. .condition Conditional statement determining rows modify. ... One statements determining columns mutate . .envir environment use evaluation. .method underlying method use mutation. Acceptable values : \"default\", default, uses dplyr::mutate() available, falls back base::transform() (warning) . \"dplyr\" uses dplyr::mutate() throws error available. \"base\" always uses base::transform().","code":""},{"path":"https://torfason.github.io/zulutils/reference/mutate_cond.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mutate only rows of data.frame/tibble that satisfy condition — mutate_cond","text":"named parameters prefixed . reduce probability conflict column names mutated, specified ... parameter. function relies either dplyr::mutate() available, base::transform() dplyr package available. Specifying multiple mutations ... allowed, , , important aware differences mutate() transform(). two functions similar, apart fact mutate() executes transformations iterative manner, later transformations can use columns created earlier transformations, whereas transform() uses values original data.frame, regardless number steps.","code":""},{"path":"https://torfason.github.io/zulutils/reference/mutate_cond.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate only rows of data.frame/tibble that satisfy condition — mutate_cond","text":"","code":"# Set dist to 3 where speed is 7 or less result <- mutate_cond(cars, speed<=7, dist=3) head(result) #>   speed dist #> 1     4    3 #> 2     4    3 #> 3     7    3 #> 4     7    3 #> 5     8   16 #> 6     9   10"},{"path":"https://torfason.github.io/zulutils/reference/na_if_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace values in x that are contained in y with NA. — na_if_in","title":"Replace values in x that are contained in y with NA. — na_if_in","text":"function variant/extension dplyr::na_if(). Whereas version requires y length one, function allows y vector replaces elements x found y NA values. function can useful cleaning data setting multiple annoying values NA.","code":""},{"path":"https://torfason.github.io/zulutils/reference/na_if_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace values in x that are contained in y with NA. — na_if_in","text":"","code":"na_if_in(x, y)"},{"path":"https://torfason.github.io/zulutils/reference/na_if_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace values in x that are contained in y with NA. — na_if_in","text":"x Vector modify. y Value replace NA.","code":""},{"path":"https://torfason.github.io/zulutils/reference/na_if_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace values in x that are contained in y with NA. — na_if_in","text":"modified version x replaces values found y NA.","code":""},{"path":[]},{"path":"https://torfason.github.io/zulutils/reference/na_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace missing values — na_replace","title":"Replace missing values — na_replace","text":"Replaces NA values found vector specified scalar value NOTE: dplyr::coalesce() function now provides functionality general way, function may merit deprecation.","code":""},{"path":"https://torfason.github.io/zulutils/reference/na_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace missing values — na_replace","text":"","code":"na_replace(x, replace)"},{"path":"https://torfason.github.io/zulutils/reference/na_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace missing values — na_replace","text":"x Vector possibly containing missing (NA) values. replace Scalar replacement value.","code":""},{"path":"https://torfason.github.io/zulutils/reference/na_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace missing values — na_replace","text":"Copy x missing values replaced replace.","code":""},{"path":[]},{"path":"https://torfason.github.io/zulutils/reference/noop.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a single argument unchanged — noop","title":"Return a single argument unchanged — noop","text":"can often useful (developing pipelines example), access function simply returns element receives. function.","code":""},{"path":"https://torfason.github.io/zulutils/reference/noop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a single argument unchanged — noop","text":"","code":"noop(x, ...)"},{"path":"https://torfason.github.io/zulutils/reference/noop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a single argument unchanged — noop","text":"x single argument () process. ... arguments ignored","code":""},{"path":"https://torfason.github.io/zulutils/reference/noop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a single argument unchanged — noop","text":"argument x returned unchanged.","code":""},{"path":"https://torfason.github.io/zulutils/reference/notate.html","id":null,"dir":"Reference","previous_headings":"","what":"Embed factor levels and value labels in values. — notate","title":"Embed factor levels and value labels in values. — notate","text":"function adds level/label information annotation either factors labelled variables. function called notate() rather annotate() avoid conflict ggplot2::annotate(). printing labelled variables tibble console, numeric value text label shown, variable labels. using View() function, variable labels shown value labels. factors, way view integer levels values time. order allow viewing variable value labels time, function converts factor labelled variables character, including numeric levels (labelled values) character values (labelled labels) output. output intended processing, viewing, example using View() function. can achieved directly using ViewNotated() ViewAnnotated() functions (ViewAnnotated() synonym ViewNotated().","code":""},{"path":"https://torfason.github.io/zulutils/reference/notate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Embed factor levels and value labels in values. — notate","text":"","code":"notate(d)  ViewNotated(d)  ViewAnnotated(d)"},{"path":"https://torfason.github.io/zulutils/reference/notate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Embed factor levels and value labels in values. — notate","text":"d data.frame one desires annotate /view.","code":""},{"path":"https://torfason.github.io/zulutils/reference/notate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Embed factor levels and value labels in values. — notate","text":"processed data.frame, suitable viewing.","code":""},{"path":"https://torfason.github.io/zulutils/reference/padding.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad string with space or other characters — padding","title":"Pad string with space or other characters — padding","text":"Left right pad string space characters order get string certain length. function thin wrapper around stringr::str_pad().","code":""},{"path":"https://torfason.github.io/zulutils/reference/padding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad string with space or other characters — padding","text":"","code":"lpad(string, width, pad = \" \")  rpad(string, width, pad = \" \")"},{"path":"https://torfason.github.io/zulutils/reference/padding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad string with space or other characters — padding","text":"string Character vector pad. width many characters minimum output. pad string pad .","code":""},{"path":"https://torfason.github.io/zulutils/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://torfason.github.io/zulutils/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://torfason.github.io/zulutils/reference/print.zmisc_catty.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a catty vector — print.zmisc_catty","title":"Print a catty vector — print.zmisc_catty","text":"print.zmisc_catty(x, ...) prints catty vector (using cat() instead print() output).","code":""},{"path":"https://torfason.github.io/zulutils/reference/print.zmisc_catty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a catty vector — print.zmisc_catty","text":"","code":"# S3 method for zmisc_catty print(x, ...)"},{"path":"https://torfason.github.io/zulutils/reference/print.zmisc_catty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a catty vector — print.zmisc_catty","text":"x catty vector ... arguments print (ignored)","code":""},{"path":"https://torfason.github.io/zulutils/reference/print.zmisc_catty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a catty vector — print.zmisc_catty","text":"input returned invisibly.","code":""},{"path":"https://torfason.github.io/zulutils/reference/rename_enframed.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename tibble columns according to values in another tibble. — rename_enframed","title":"Rename tibble columns according to values in another tibble. — rename_enframed","text":"function renames variables d according columns d.enframed, enframed format (two columns named name value, see tibble::enframe() details). rename according d.enframed$name, according d.enframed$value NOTE: function may merit deprecation, dplyr::rename_with(), coupled lookup(), deals quite well use-case (general).","code":"d.enframed = tibble::enframe(c(a=\"New A\", b=\"New B\"))"},{"path":"https://torfason.github.io/zulutils/reference/rename_enframed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename tibble columns according to values in another tibble. — rename_enframed","text":"","code":"rename_enframed(d, d.enframed)"},{"path":"https://torfason.github.io/zulutils/reference/rename_enframed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename tibble columns according to values in another tibble. — rename_enframed","text":"d tibble whose columns want rename. d.enframed enframed tibble old new names.","code":""},{"path":"https://torfason.github.io/zulutils/reference/rename_enframed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename tibble columns according to values in another tibble. — rename_enframed","text":"tibble identical d renamed columns.","code":""},{"path":"https://torfason.github.io/zulutils/reference/tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the tibble package to ensure awareness of tibbles. — tibble","title":"Load the tibble package to ensure awareness of tibbles. — tibble","text":"See tibble::tibble details.","code":""},{"path":"https://torfason.github.io/zulutils/reference/validate.zmisc_catty.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal validation function for catty objects — validate.zmisc_catty","title":"Internal validation function for catty objects — validate.zmisc_catty","text":"Internal validation function catty objects","code":""},{"path":"https://torfason.github.io/zulutils/reference/validate.zmisc_catty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal validation function for catty objects — validate.zmisc_catty","text":"","code":"validate.zmisc_catty(x)"},{"path":"https://torfason.github.io/zulutils/reference/validate.zmisc_catty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal validation function for catty objects — validate.zmisc_catty","text":"x object validate","code":""},{"path":"https://torfason.github.io/zulutils/reference/validate.zmisc_catty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal validation function for catty objects — validate.zmisc_catty","text":"object","code":""},{"path":"https://torfason.github.io/zulutils/reference/zulu_letters.html","id":null,"dir":"Reference","previous_headings":"","what":"A lookup table for the phonetic alphabet — zulu_letters","title":"A lookup table for the phonetic alphabet — zulu_letters","text":"dataset containing letters alphabet representaion phonetic alphabet (alpha, bravo, charlie, ..., zulu). data formatted enframed tibble (see tibble::enframe()), suitable use contexts lookup() function.","code":""},{"path":"https://torfason.github.io/zulutils/reference/zulu_letters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A lookup table for the phonetic alphabet — zulu_letters","text":"","code":"zulu_letters"},{"path":"https://torfason.github.io/zulutils/reference/zulu_letters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A lookup table for the phonetic alphabet — zulu_letters","text":"tibble (data frame) 26 rows 2 variables: name letters alphabet value phonetic representation letters","code":""},{"path":"https://torfason.github.io/zulutils/reference/zulutils-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct functions in package zulutils. — zulutils-defunct","title":"Defunct functions in package zulutils. — zulutils-defunct","text":"functions listed defunct. possible,   alternative functions similar functionality mentioned.","code":""},{"path":"https://torfason.github.io/zulutils/reference/zulutils-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defunct functions in package zulutils. — zulutils-defunct","text":"","code":"move(...)"},{"path":"https://torfason.github.io/zulutils/reference/zulutils-defunct.html","id":"move","dir":"Reference","previous_headings":"","what":"move","title":"Defunct functions in package zulutils. — zulutils-defunct","text":"move() defunct. Use dplyr::relocate().","code":""},{"path":"https://torfason.github.io/zulutils/reference/zulutils-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package zulutils. — zulutils-deprecated","title":"Deprecated functions in package zulutils. — zulutils-deprecated","text":"functions listed deprecated defunct   near future. possible, alternative functions similar   functionality also mentioned. Help pages deprecated functions   available help(\"<function>-deprecated\").","code":""},{"path":"https://torfason.github.io/zulutils/reference/zulutils-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package zulutils. — zulutils-deprecated","text":"","code":"na.replace(x, replace)  lookup_enframed(x, lookup_table)"},{"path":"https://torfason.github.io/zulutils/reference/zulutils-deprecated.html","id":"na-replace","dir":"Reference","previous_headings":"","what":"na.replace","title":"Deprecated functions in package zulutils. — zulutils-deprecated","text":"na.replace() deprecated favor dplyr::coalesce().","code":""},{"path":"https://torfason.github.io/zulutils/reference/zulutils-deprecated.html","id":"lookup-enframed","dir":"Reference","previous_headings":"","what":"lookup_enframed","title":"Deprecated functions in package zulutils. — zulutils-deprecated","text":"lookup_enframed() deprecated favor lookup().","code":""},{"path":"https://torfason.github.io/zulutils/reference/zulutils.html","id":null,"dir":"Reference","previous_headings":"","what":"zulutils: Miscellaneous utility functions that the author found useful — zulutils","title":"zulutils: Miscellaneous utility functions that the author found useful — zulutils","text":"package contains various miscellaneous utility functions  author found useful time. free use  , YMMV (Mileage May Vary).","code":""},{"path":[]}]
